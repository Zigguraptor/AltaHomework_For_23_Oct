// <auto-generated />
using System;
using AltaHomework_For_23_Oct.DAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AltaHomework_For_23_Oct.Migrations
{
    [DbContext(typeof(UsersDataDbContext))]
    partial class UsersDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AltaHomework_For_23_Oct.DAL.Entities.FriendsRequestEntity", b =>
                {
                    b.Property<Guid>("User1Guid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastModDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("User2Guid")
                        .HasColumnType("uuid");

                    b.HasKey("User1Guid");

                    b.HasIndex("User2Guid");

                    b.ToTable("FriendRequests");
                });

            modelBuilder.Entity("AltaHomework_For_23_Oct.DAL.Entities.FriendshipEntity", b =>
                {
                    b.Property<Guid>("User1Guid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastModDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("User2Guid")
                        .HasColumnType("uuid");

                    b.HasKey("User1Guid");

                    b.HasIndex("User2Guid");

                    b.ToTable("UsersFriends");
                });

            modelBuilder.Entity("AltaHomework_For_23_Oct.DAL.Entities.MessageEntity", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastModDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RecipientGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SenderGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("RecipientGuid");

                    b.HasIndex("SenderGuid");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("AltaHomework_For_23_Oct.DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastModDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Guid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AltaHomework_For_23_Oct.DAL.Entities.FriendsRequestEntity", b =>
                {
                    b.HasOne("AltaHomework_For_23_Oct.DAL.Entities.UserEntity", "User1")
                        .WithMany()
                        .HasForeignKey("User1Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AltaHomework_For_23_Oct.DAL.Entities.UserEntity", "User2")
                        .WithMany()
                        .HasForeignKey("User2Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("AltaHomework_For_23_Oct.DAL.Entities.FriendshipEntity", b =>
                {
                    b.HasOne("AltaHomework_For_23_Oct.DAL.Entities.UserEntity", "User1")
                        .WithMany()
                        .HasForeignKey("User1Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AltaHomework_For_23_Oct.DAL.Entities.UserEntity", "User2")
                        .WithMany()
                        .HasForeignKey("User2Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("AltaHomework_For_23_Oct.DAL.Entities.MessageEntity", b =>
                {
                    b.HasOne("AltaHomework_For_23_Oct.DAL.Entities.UserEntity", "Recipient")
                        .WithMany("InMessages")
                        .HasForeignKey("RecipientGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AltaHomework_For_23_Oct.DAL.Entities.UserEntity", "Sender")
                        .WithMany("OutMessages")
                        .HasForeignKey("SenderGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("AltaHomework_For_23_Oct.DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("InMessages");

                    b.Navigation("OutMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
